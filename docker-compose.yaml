version: "3.7"
services:
  backend_app:
    build: './docker/apache'
    image: apache:laravel
    #restart: always
    ports:
      - "80:80"
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - database
    networks:
      - laravel_network
#  frontend_app:
#    build:
#      context: ./docker/nginx
#      dockerfile: frontend.dockerfile
#    image: nginx:vue
#    #restart: always
#    ports:
#      - "8000:80"
#    working_dir: /var/www/html
#    volumes:
#      - ./:/var/www/html
#    depends_on:
#      - database
#    networks:
#      - laravel_network
  database:
    build: './docker/database'
    image: mysql:laravel
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - MYSQL_ROOT_USER=${DB_USERNAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
      - ./docker/database/conf/mysql_conf.cnf:/etc/mysql/conf.d/mysql_conf.cnf
      - mysql_storage:/var/lib/mysql/
    networks:
      - laravel_network
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_general_ci']
  #redis
  redis:
    image: redis:alpine
    #restart: always
    volumes:
      - redis_storage:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_storage:
  mysql_storage:

# Docker Networks
networks:
  laravel_network:
